
objlist := $(addsuffix .o, $(srclist))
deplist := $(addsuffix .d, $(srclist))

subobjs := $(foreach d, $(subdirs), $(addsuffix .obj, $(d)/$(d)))
INCFLAG := $(addprefix -I, $(INCLIST))

DEPGEN   =  -MT $@ -MMD -MP -MF $(basename $@).t

target_obj := $(notdir $(shell pwd)).obj
target_run := $(notdir $(shell pwd)).run
ifeq ($(BIN), 1)
	target := $(target_run)
else
	target := $(target_obj)
endif

testsrc := $(shell find . -maxdepth 1 -name 'test*.cpp')
testrun := $(addsuffix .run, $(testsrc))
testrunlist :=  $(if $(testrun), $(subst $(space),&&, $(testrun))echo "Test Finish", )
deplist += $(addsuffix .d, $(testsrc))

toclean += $(target) $(deplist) $(objlist) $(testrun)
export MAKECMDGOALS

clean: $(subdirs)
	rm -f $(toclean)
	@ rm -f compiler-file*.d

build: $(subdirs) $(target)

$(target_obj): $(objlist) $(subobjs)
	$(LD) -relocatable $^ -o $@

$(subobjs): $(subdirs)

%.c.o: %.c %.c.d
	$(CC) $(CFLAGS) $(INCFLAG) $(DEPGEN) -c -o $@ $<
	@ mv -f $(basename $@).t $(basename $@).d

%.S.o: %.S %.S.d
	$(CC) $(CFLAGS) $(INCFLAG) $(DEPGEN) -c -o $@ $<
	@ mv -f $(basename $@).t $(basename $@).d

%.cpp.o: %.cpp %.cpp.d
	$(CXX) $(CXXFLAGS) $(INCFLAG) $(DEPGEN) -c -o $@ $<
	@ mv -f $(basename $@).t $(basename $@).d

%.cc.o: %.cc %.cc.d
	$(CXX) $(CXXFLAGS) $(INCFLAG) $(DEPGEN) -c -o $@ $<
	@ mv -f $(basename $@).t $(basename $@).d

$(target_run): $(objlist) $(subobjs)
	$(CXX)  $^ -o $@
	yes | cp -f $@ $(SYSROOT)/usr/bin/

test: $(testrun)
	$(testrunlist)

$(subdirs): FORCE
	$(MAKE) -C $@ $(MAKECMDGOALS)

$(deplist): ;

include $(deplist)

FORCE:

